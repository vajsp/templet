{"version":3,"sources":["js/app.js","js/directive.js","js/filter.js","js/rem.js","js/service.js","js/controller/myCtr.js","js/controller/newsCtr.js","js/controller/wordCtr.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"../src/EI.js","sourcesContent":["\r\n/**\r\n * Created by Administrator on 2017/03/07.\r\n */\r\n\r\nangular.module('App',['ui.router','rem','App.newsCtrcontrollers','wordCloud',\r\n    'App.services','App.filter', 'ngResource','App.wordControllers','App.myCtrcontrollers',\r\n\r\n])\r\n    .config(['$stateProvider','$urlRouterProvider',\r\n        function ($stateProvider,$urlRouterProvider) {\r\n            $urlRouterProvider.otherwise('/class');\r\n            $stateProvider\r\n                .state('class',{\r\n                    url:'/class',\r\n                    templateUrl:'/partials/news.html',\r\n                    controller: 'newsCtr',\r\n                })\r\n                .state('bgy', {\r\n                    url: '/bgy:id',\r\n                    templateUrl: '/partials/1.html',\r\n                    controller: 'detailCtr'\r\n                })\r\n                .state('word', {\r\n                    url: '/word',\r\n                    templateUrl: '/partials/word.html',\r\n                    controller: 'wordCtr'\r\n                })\r\n                .state('attention', {\r\n                    // resolve: {\r\n                    //     data: function (Column, $stateParams) {\r\n                    //         return Column.get({id: $stateParams.id}).$promise;\r\n                    //     }\r\n                    // },\r\n                    url: '/attention',\r\n                    templateUrl: '/partials/attention.html',\r\n                    // controller: 'columnIntroduceCtr'\r\n                })\r\n                .state('my', {\r\n                    // resolve: {\r\n                    //     data: function (Column, $stateParams) {\r\n                    //         return Column.get({id: $stateParams.id}).$promise;\r\n                    //     }\r\n                    // },\r\n                    url: '/my',\r\n                    templateUrl: '/partials/my.html',\r\n                    controller: 'myCtr'\r\n                })\r\n\r\n        }]);","/**\r\n * Created by Administrator on 2017/03/13.\r\n */\r\nangular.module('wordCloud', [])\r\n    .directive('mrcloud',function () {\r\n            return {\r\n                restrict:'E',\r\n                replace:'true',\r\n                // template:'<div width heigth ng-for i in wordcloudArr  ng-click=wordclick(i)></div>',\r\n                template:'<span style=\"width: {{x}}\"></span>',\r\n                scope:{\r\n                    width:'=',\r\n                    heigth:'=',\r\n                    dataSrc:'=',\r\n                    onwordclick:'&'\r\n                },\r\n                controller:function ($scope) {\r\n                    console.log($scope.dataSrc);\r\n                    $scope.$watch('wordclouddata',function (newValue,oldValue) {\r\n                        // $scope.wordcloudArr = datasrc.datafilter($scope.data)\r\n                    });\r\n                    $scope.wordclick =function (i) {\r\n                        $scope.onwordclick({i:i});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    );","/**\n * Created by Action on 17/4/27.\n */\nangular.module('App.filter',[])\n    .filter('trustUrl', function ($sce) {\n        return function(url) {\n            return $sce.trustAsResourceUrl(url);\n        };\n    });","angular.module('rem',[\n])\n\n    .directive('mrRem',['$parse', '$filter', function($parse, $filter){\n\n        return {\n            restrict:'A',\n            link: function(scope, element, attrs){\n                var _size = 100;\n                var p = (document.body && document\n                    .body.clientWidth || document.getElementsByTagName(\"html\")[0].offsetWidth) / 750;\n                _size = p * 100;\n                document.getElementsByTagName(\"html\")[0].setAttribute(\"style\", \"font-size:\" + _size + \"px!important\");\n\n            }\n        };\n\n    }])\n    .directive('mrHeight',['$parse', '$filter', function($parse, $filter){\n\n        return {\n            restrict:'A',\n            link: function(scope, element, attrs){\n                var p = window.innerHeight;\n                var a=document.getElementsByClassName('bar-header')[0];\n                document.getElementById('allmap').setAttribute(\"style\", \"height:\" +  (p-a.offsetHeight) + \"px!important\");\n            }\n        };\n    }])","/**\r\n * Created by Administrator on 2017/03/07.\r\n */\r\n'use strict';\r\n/* Services */\r\nangular.module('App.services', [])\r\n    .value('version', 'v1.0')\r\n    .factory('Columns', ['$resource', function ($resource) {\r\n        var Columns = $resource('/api/list',{\r\n            //'query': {method: 'GET', isArray: true}\r\n        });\r\n        return Columns;\r\n    }])\r\n    .factory('Live', ['$resource', function ($resource) {\r\n      \r\n        var Live = $resource('/api/live/:id',{id:'@id'},{\r\n            'query': {method: 'GET', isArray: true}\r\n        });\r\n        return Live;\r\n    }])\r\n    .factory('Column', ['$resource', function ($resource) {\r\n      \r\n        var Column = $resource('/api/list/:id', {id: '@id'}, {\r\n            'query': {method: 'GET', isArray: true}\r\n        });\r\n        //   Column.articles = $resource('/api/column/:id/articles', {id: '@id'}, {\r\n        //     'query': {method: 'GET', isArray: true}\r\n        // });\r\n        return Column;\r\n    }])\r\n    .factory('My', ['$resource', function ($resource) {\r\n\r\n        var My = $resource('/api/my',{\r\n            // 'query': {method: 'GET', isArray: true}\r\n        });\r\n        return My;\r\n    }])\r\n    .factory('Article', ['$resource', function ($resource) {\r\n      \r\n        var Article = $resource('/api/article/:id', {id: '@id'}, {\r\n            'query': {method: 'GET', isArray: true}\r\n        });\r\n        Article.favorite = $resource('/api/article/:id/fav', {id: '@id'}, {\r\n            'update': {method: 'POST'}\r\n        });\r\n        Article.cmt = $resource('/api/article/:id/comments', {id: '@id'});\r\n        Article.reply = $resource('/api/article/:id/comment',\r\n            {id: '@id',replyUid :'@uid'});\r\n        /*Article.comment=$resource('/api/article/:id/comment',{id:'@id'},{\r\n            'replay':{method:'POST',}\r\n        })*/\r\n        return Article;\r\n    }])\r\n    .factory('Resource', ['$resource', function ($resource) {\r\n      \r\n        var Resource = $resource('/portal/resource/:id', {id: '@id'}, {\r\n            'update': {method: 'POST'}\r\n        });\r\n        Resource.batch = $resource('/portal/resource/batch', {}, {\r\n            'get': {method: 'POST'}\r\n        });\r\n        Resource.getId = $resource('/portal/resource/getId');\r\n        Resource.token = $resource('/portal/qiniu/token');\r\n        return Resource;\r\n    }])\r\n    .factory('ArticleComment', ['$resource', function ($resource) {\r\n      \r\n        var Cmt = $resource('/api/article/comment/:id/love', {id: '@id'}, {\r\n            'update': {method: 'POST', isArray: true},\r\n            'delete': {method: 'DELETE', isArray: true}\r\n        });\r\n        Cmt.report =\r\n            $resource('/api/article/comment/:commentId/report', {commentId:'@commentId'},\r\n             {'commit': {method: 'DELETE'}\r\n        });\r\n\r\n        Cmt.del=$resource('/api/article/comment/:commentId', {commentId: '@commentId'});\r\n        return Cmt;\r\n    }])\r\n    .factory('Publish', ['$resource', function ($resource) {\r\n        var Publish = $resource('/api/publish/:id', {id: '@id'}, {\r\n            'update': {method: 'POST'}\r\n        });\r\n        Publish.deliver = $resource('/api/order/:id/deliver', {id: '@id'}, {\r\n            'commit': {method: 'POST'}\r\n        });\r\n        Publish.modify = $resource('/api/order/:orderId/status', {id: '@orderId'}, {\r\n            'update': {method: 'POST'}\r\n        });\r\n        return Publish;\r\n    }])\r\n    .factory('User', ['$resource', function ($resource) {\r\n      \r\n          var  User = $resource('/api/me', {}, {\r\n            'update': {method: 'POST'}\r\n        });\r\n        return User;\r\n    }])\r\n    .service('CheckLogin', ['$rootScope', function ($rootScope) {\r\n        this.check = function () {\r\n            if ($rootScope.login) {\r\n\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    }])\r\n    .service('DateFormatter', [function (){\r\n        var service = {};\r\n\r\n        function formatDate(d) {\r\n            return d.getFullYear()+'-'+(d.getMonth() + 1) + '-' + d.getDate();\r\n        }\r\n\r\n        function formatDate1(d) {\r\n            return (d.getMonth() + 1) + '月' + d.getDate()+\"日\";\r\n        }\r\n        function formatNumber(n) {\r\n            if (n < 10) {\r\n                return '0' + n;\r\n            } else {\r\n                return '' + n;\r\n            }\r\n        }\r\n\r\n        function years(d) {\r\n            var date = new Date(d);\r\n            date.setDate(d.getDate()+365);\r\n            return date;\r\n        }\r\n\r\n        service.formatActivityDate = function (ts) {\r\n            var date = new Date(ts);\r\n            return formatDate(date) + ' ' + formatNumber(date.getHours()) + ':' + formatNumber(date.getMinutes());\r\n        };\r\n\r\n        service.formatCommentDate = function (ts) {\r\n            return formatDate1(new Date(ts));\r\n        };\r\n        service.formatListDate = function (ts) {\r\n            return formatDate(new Date(ts));\r\n        };\r\n\r\n        service.formatLiveDate = function (ts) {\r\n            var date = new Date(ts);\r\n            var weekdays = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];\r\n            return formatNumber(date.getMonth() + 1) + '-' + formatNumber(date.getDate()) + ' ' + formatNumber(date.getHours()) + ':' + formatNumber(date.getMinutes()) + ' ' + weekdays[date.getDay()];\r\n        };\r\n        service.formatNowTime = function () {\r\n\r\n            return new Date().getTime();\r\n        };\r\n        service.subscribeTime = function () {\r\n            var date = new Date();\r\n            var date2 = years(date);\r\n            return formatDate(date) +  '至' + formatDate(date2);\r\n\r\n        };\r\n        return service;\r\n    }])\r\n\r\n    .service('ImageUploader', ['$log', '$http', 'FileUploader', 'Resource', function ($log, $http, FileUploader, Resource) {\r\n        this.initUploader = function ($scope, token, done) {\r\n            var uploader = new FileUploader({\r\n                url: 'http://upload.qiniu.com',\r\n                alias: 'file',\r\n                queueLimit: 1,\r\n                removeAfterUpload: true,\r\n                formData: [\r\n                    {\r\n                        accept: 'text/plain; charset=utf-8',\r\n                        \"token\": token.token\r\n                    }\r\n                ]\r\n            });\r\n            //document.domain = 'uptx.qiniu.com';\r\n            // FILTERS\r\n            uploader.filters.push({\r\n                name: 'customFilter',\r\n                fn: function () {\r\n                    return this.queue.length < 1;\r\n                }\r\n            });\r\n\r\n            uploader.filters.push({\r\n                name: 'imageFilter',\r\n                fn: function (item) {\r\n                    var type = '|' + item.type.slice(item.type.lastIndexOf('/') + 1) + '|';\r\n                    return '|jpg|png|jpeg|'.indexOf(type) !== -1;\r\n                }\r\n            });\r\n\r\n            // CALLBACKS\r\n            uploader.onWhenAddingFileFailed = function (item /*{File|FileLikeObject}*/, filter, options) {\r\n                console.info('onWhenAddingFileFailed', item, filter, options);\r\n            };\r\n            uploader.onAfterAddingFile = function (fileItem) {\r\n                // if (!CheckLogin.check()) {\r\n                //     uploader.removeFromQueue(fileItem);\r\n                //     return;\r\n                // }\r\n                console.info('onAfterAddingFile', fileItem);\r\n                Resource.getId.get(function (res) {\r\n                    $log.info(\"resource id:\", res.id);\r\n                    fileItem.resId = res.id;\r\n                    fileItem.formData.push({\"key\": res.id});\r\n                    fileItem.upload();\r\n                    $scope.uploading = true;\r\n                }, function (res) {\r\n                    $scope.uploading = false;\r\n                });\r\n            };\r\n            uploader.onAfterAddingAll = function (addedFileItems) {\r\n                console.info('onAfterAddingAll', addedFileItems);\r\n            };\r\n            uploader.onBeforeUploadItem = function (item) {\r\n                console.info('onBeforeUploadItem', item);\r\n            };\r\n            uploader.onSuccessItem = function (fileItem, response, status, headers) {\r\n                console.info('onSuccessItem', fileItem, response, status, headers);\r\n\r\n                function saveResource(resource) {\r\n                    $log.info('create resource:', resource);\r\n                    Resource.save(resource, function () {\r\n                        $log.info(\"create resource successfully\");\r\n                        if (resource.key) {\r\n                            Resource.batch.get({}, {'ids': [resource.key]}, function (data) {\r\n                                if (data.data.length) {\r\n                                    done(data.data[0]);\r\n                                }\r\n                            });\r\n                        }\r\n                        $scope.uploading = false;\r\n                    }, function (res) {\r\n                        $scope.uploading = false;\r\n                    });\r\n                }\r\n\r\n                /* IE8,9下，跨域上传会导致response为undefined，针对这种情况，上传后，通过尝试加载来判断上传是否成功了 */\r\n                if (response) {\r\n                    var resource = {name: fileItem.file.name, tp: 0, key: response.key, hash: response.hash};\r\n                    saveResource(resource);\r\n                } else {\r\n                    var url = 'http://' + token.imageDomain + '/' + fileItem.resId + '?imageView2/0/w/640';\r\n                    var img = new Image(); //创建一个Image对象，实现图片的预下载\r\n                    img.onload = function(){\r\n                        var resource = {name: fileItem.file.name, tp: 0, key: fileItem.resId};\r\n                        saveResource(resource);\r\n                    };\r\n                    img.onerror = function () {\r\n                        // Alert.alert('上传失败', true);\r\n                        $scope.uploading = false;\r\n                    };\r\n                    img.src = url;\r\n                }\r\n            };\r\n            uploader.onErrorItem = function (fileItem, response, status, headers) {\r\n                // Alert.alert('上传失败', true);\r\n                console.info('onErrorItem', fileItem, response, status, headers);\r\n                $scope.uploading = false;\r\n            };\r\n            uploader.onCancelItem = function (fileItem, response, status, headers) {\r\n                console.info('onCancelItem', fileItem, response, status, headers);\r\n            };\r\n            uploader.onCompleteItem = function (fileItem, response, status, headers) {\r\n                console.info('onCompleteItem', fileItem, response, status, headers);\r\n            };\r\n            uploader.onCompleteAll = function () {\r\n                console.info('onCompleteAll');\r\n            };\r\n\r\n            return uploader;\r\n        }\r\n    }])\r\n    .service('CookieService', ['$window', function ($window){\r\n        var service = {};\r\n\r\n        function setCookie(name, value, path, iDay){\r\n            /* iDay 表示过期时间\r\n             cookie中 = 号表示添加，不是赋值 */\r\n            var oDate=new Date();\r\n            oDate.setDate(oDate.getDate()+iDay);\r\n            document.cookie=name+'='+value+';path=' + path + ';expires='+oDate;\r\n        }\r\n\r\n        function getCookie(name){\r\n            /* 获取浏览器所有cookie将其拆分成数组 */\r\n            var arr=document.cookie.split('; ');\r\n\r\n            for(var i=0;i<arr.length;i++)    {\r\n                /* 将cookie名称和值拆分进行判断 */\r\n                var arr2=arr[i].split('=');\r\n                if(arr2[0]==name){\r\n                    return arr2[1];\r\n                }\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function removeCookie(name, path){\r\n            /* -1 天后过期即删除 */\r\n            setCookie(name, 1, path, -1);\r\n        }\r\n\r\n        service.get = function (key) {\r\n            return getCookie(key);\r\n        };\r\n\r\n        service.remove = function (key, path) {\r\n            removeCookie(key, path);\r\n        };\r\n\r\n        return service;\r\n    }]);\r\n","/**\r\n * Created by Administrator on 2017/03/08.\r\n */\r\nangular.module('App.myCtrcontrollers',['angular-jqcloud'])\r\n    .controller('myCtr', ['$scope',  '$state','$rootScope','$http',\r\n        function ($scope, $state, $rootScope,$http) {\r\n            $rootScope.state = true;\r\n\r\n        }\r\n\r\n]);","/**\r\n * Created by Administrator on 2017/03/08.\r\n */\r\nangular.module('App.newsCtrcontrollers',['angular-jqcloud'])\r\n    .controller('newsCtr', ['$scope',  '$state','$rootScope','$http',\r\n        function ($scope, $state, $rootScope,$http) {\r\n            $rootScope.state=true;\r\n            $scope.showLogoDetail= function () {\r\n              $rootScope.state=false;\r\n            };\r\n            $rootScope.isActive = 1;\r\n            $rootScope.bar = function (index) {\r\n                    $rootScope.isActive = index;\r\n            }\r\n\r\n            $http.get('json/data.json').then(function(res){\r\n                  console.log(res);\r\n                  $scope.data = res.data;\r\n                $scope.logos =   $scope.data.logos.news;\r\n                $scope.lists =   $scope.data.list.newsList;\r\n            });\r\n\r\n            $scope.isActive= 1;\r\n            $scope.tabs = function (index) {\r\n                $scope.isActive= index;\r\n                if(index==0){\r\n\r\n                }else  if(index==1){\r\n                    $scope.logos =   $scope.data.logos.news;\r\n                    $scope.lists =   $scope.data.list.newsList;\r\n                }else  if(index==2){\r\n                    $scope.logos =   $scope.data.logos.estate;\r\n                    $scope.lists =   $scope.data.list.estateList;\r\n                }else  if(index==3){\r\n                    $scope.logos =   $scope.data.logos.science;\r\n                    $scope.lists =   $scope.data.list.scienceList;\r\n\r\n                }else  if(index==4){\r\n                    $scope.logos =   $scope.data.logos.it;\r\n                    $scope.lists =   $scope.data.list.itList;\r\n                }\r\n            }\r\n        }\r\n\r\n])\r\n    .controller('detailCtr', ['$scope',  '$state','$rootScope','$stateParams',\r\n        function ($scope, $state, $rootScope,$stateParams) {\r\n        console.log($stateParams)\r\n        // $rootScope.state=true;\r\n        // $scope.showWordDetail= function () {\r\n            $rootScope.state=false;\r\n        // }\r\n\r\n         $scope.colors = ['#ef473a'];//热词颜色配置\r\n        $scope.words = [\r\n            {text:'物业差',link:'#/word',style:{\r\n                top:2.82+'rem',left:3.63+'rem',width:1+'rem',height:1+'rem',lineHeight:1+'rem',backgroundColor:'#e9375d'\r\n            }},\r\n            {text:'生态社区',link:'#/word',style:{\r\n                top:1.59+'rem',left:2.24+'rem',width:1.6+'rem',height:1.6+'rem',lineHeight:1.6+'rem',backgroundColor:'#00b17d'\r\n            }},\r\n            {text:'暴涨',link:'#/word',style:{\r\n                top:.41+'rem',left:.37+'rem',width:1.2+'rem',height:1.2+'rem',lineHeight:1.2+'rem',backgroundColor:'#00b17d'\r\n            }},\r\n            {text:'维权',link:'#/word',style:{\r\n                top:.3+'rem',left:2.09+'rem',width:1+'rem',height:1+'rem',lineHeight:1+'rem',backgroundColor:'#e9375d'\r\n            }},\r\n            {text:'退房',link:'#/word',style:{\r\n                top:2.45+'rem',left:1.00+'rem',width:1.3+'rem',height:1.3+'rem',lineHeight:1.3+'rem',backgroundColor:'#e9375d'\r\n            }},\r\n            {text:'广东百强',link:'#/word',style:{\r\n                top:.3+'rem',left:4.9+'rem',width:1.8+'rem',height:1.8+'rem',lineHeight:1.8+'rem',backgroundColor:'#00b17d'\r\n            }},\r\n            {text:'广东省',link:'#/word',style:{\r\n                top:2.3+'rem',left:4.52+'rem',width:0.8+'rem',height:.8+'rem',lineHeight:.8+'rem',backgroundColor:'#b4b4b4'\r\n            }},\r\n            {text:'五十强',link:'#/word',style:{\r\n                top:0.1+'rem',left:3.4+'rem',width:1+'rem',height:1+'rem',lineHeight:1+'rem',backgroundColor:'#00b17d'\r\n            }},\r\n            {text:'拿地',link:'#/word',style:{\r\n                top:2.3+'rem',left:5.54+'rem',width:1.3+'rem',height:1.3+'rem',lineHeight:1.3+'rem',backgroundColor:'#00b17d'\r\n            }},\r\n            {text:'森林城市',link:'#/word',style:{\r\n                top:1.7+'rem',left:0.2+'rem',width:1+'rem',height:1+'rem',lineHeight:1+'rem',backgroundColor:'#00b17d'\r\n            }}\r\n        ]\r\n\r\n            $scope.showWord = function (id) {\r\n            console.log(id);\r\n                $state.go(id);\r\n            }\r\n    }\r\n\r\n]);;","/**\r\n * Created by Administrator on 2017/03/08.\r\n */\r\nangular.module('App.wordControllers', [ ])\r\n    .controller('wordCtr', ['$scope','$state','$rootScope',\r\n        function ($scope, $state,$rootScope) {\r\n            // $rootScope.state=true;\r\n            // $scope.showWordDetail= function () {\r\n                $rootScope.state=false;\r\n            // };\r\n            // $scope.goBack  =function () {\r\n            //     $state.go(-1);\r\n            // };\r\n        }\r\n\r\n]);"]}